# name: CI/CD with SonarCloud

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       mongo:
#         image: mongo:6
#         ports: [27017:27017]
#         options: >-
#           --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" 
#           --health-interval 10s 
#           --health-timeout 5s 
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       - name: Install backend dependencies
#         working-directory: ./server
#         run: npm install

#       - name: Run backend tests
#         working-directory: ./server
#         env:
#           MONGO_URL: mongodb://localhost:27017/testdb
#         run: npm test

#       - name: Install frontend dependencies
#         working-directory: ./client
#         run: npm install

#       - name: Build frontend
#         working-directory: ./client
#         run: npm run build

#   sonarcloud:
#     name: SonarCloud Analysis
#     runs-on: ubuntu-latest
#     needs: build-and-test

#     steps:
#  i     - name: Checkout code
#         uses: actions/checkout@v4

#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@v2
#         with:
#           projectBaseDir: .
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#   docker-build-and-push:
#     name: Build and Push Docker Image
#     runs-on: ubuntu-latest
#     needs: [build-and-test, sonarcloud]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build Docker image
#         run: docker build -t yourusername/crassist:latest .

#       - name: Push Docker image
#         run: docker push yourusername/crassist:latest
name: CI/CD with SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports: [27017:27017]
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install backend dependencies
        working-directory: ./server
        run: npm install

      - name: Run backend tests
        working-directory: ./server
        env:
          MONGO_URL: mongodb://localhost:27017/testdb
        run: npm test

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Build frontend
        working-directory: ./client
        run: npm run build

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarcloud]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t yourusername/crassist:latest .

      - name: Push Docker image
        run: docker push yourusername/crassist:latest
